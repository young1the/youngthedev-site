import Head from "next/head";
import { useEffect, useRef } from "react";
import { useTrackScroll } from "@/lib/trackScroll";
import Hero from "@/components/contents/Hero/Hero";
import Soundbar from "@/components/contents/Soundbar/Soundbar";
import Article from "@/components/contents/Article/Article";
import { NotionAPI, NotionPageRenderer } from "@/lib/notionAPI";
import NotionProjectsRenderer from "@/lib/notionAPI/renderer/NotionProjectsRenderer/NotionProjectRenderer";

export async function getStaticProps() {
  const seoulArticle = await NotionAPI.getArticleContents("seoul");
  const wantedArticle = await NotionAPI.getArticleContents("wanted");
  const projects = await NotionAPI.getProjects();
  return { props: { seoulArticle, wantedArticle, projects } };
}

export default function Home({ seoulArticle, wantedArticle, projects }: any) {
  const { soundbarWidth, currentTitle } = useTrackScroll();
  useEffect(() => {
    console.log(projects);
  }, []);
  const first = useRef<HTMLDivElement>(null);
  const onClick = () => {
    first?.current?.scrollIntoView({
      behavior: "smooth",
    });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        style={{
          marginTop: "100px",
          position: "relative",
        }}
      >
        <Hero onClick={onClick} />
        <Soundbar width={soundbarWidth} title={currentTitle} />
        <Article ref={first} color="red" />
        <Article color="yellow">
          <NotionPageRenderer notionPageContents={seoulArticle} />
        </Article>
        <Article color="green">
          <NotionPageRenderer notionPageContents={wantedArticle} />
        </Article>
        <Article color="blue">
          <NotionProjectsRenderer projects={projects} />
        </Article>
        <Article color="purple" />
      </div>
    </>
  );
}
